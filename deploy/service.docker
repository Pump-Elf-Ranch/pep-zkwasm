# Use the official Rust image from the Docker Hub
FROM rust:latest AS builder
# 安装系统依赖
RUN apt-get update && \
    apt-get install -y \
        curl \
        git \
        jq \
        supervisor \
        cmake \
        pkg-config \
        libssl-dev \
        libclang-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# 安装 Node.js 18
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get install -y nodejs=18.6.0-1nodesource1 && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*


# 安装 wasm-pack 和 wasm-opt
RUN curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh && \
    curl -L https://github.com/WebAssembly/binaryen/releases/download/version_118/binaryen-version_118-x86_64-linux.tar.gz \
        -o binaryen.tar.gz && \
    tar -xzf binaryen.tar.gz && \
    mv binaryen-version_118/bin/wasm-opt /usr/local/bin/ && \
    rm -rf binaryen.tar.gz binaryen-version_118


# Set the working directory inside the container
WORKDIR /usr/src/zkwasm-app

COPY . .

WORKDIR /usr/src/zkwasm-app/ts

RUN npm install

# 设置构建参数和环境变量
ARG SERVER_ADMIN_KEY
ENV SERVER_ADMIN_KEY=$SERVER_ADMIN_KEY

WORKDIR /usr/src/zkwasm-app
RUN make && make publish
RUN cat publish.log


# 复制启动脚本
WORKDIR /usr/src

# 复制构建结果到临时目录
RUN mkdir -p /app && \
    cp -r zkwasm-app/* /app && \
    sed -n '/Add Image Response/{s/Add Image Response //;:a;N;/}/!ba;p}' /app/publish.log | \
    sed "s/'/\"/g" | sed "s/\([a-zA-Z0-9_]\+\):/\"\1\":/" > /app/publish.json && \
    IMAGE=$(jq -r '.md5' /app/publish.json) && \
    echo "IMAGE=$IMAGE" > /app/.env && \
    echo "SETUP=TRUE" >> /app/.env && \
    echo "SERVER_ADMIN_KEY=$SERVER_ADMIN_KEY" >> /app/.env && \
    ls -l /app && \
    cp zkwasm-app/deploy/start.sh /app/start.sh


# 第二阶段：运行阶段（使用 Node.js 镜像）
FROM node:18-alpine


# 从构建阶段复制运行所需的文件
COPY --from=builder /app /app

# 设置工作目录
WORKDIR /app

# 暴露端口
EXPOSE 3000

# 设置启动命令
CMD ["sh" ,"start.sh"]

